{
    "file": "Recursion2Splitodd10-CFG.java",
    "nodes": [
        {
            "id": "a1",
            "line": "9-10",
            "label": "boolean splitOdd10(int[] nums)\treturn splitOdd10Helper(0, nums, 0, 0);"
        },
        {
            "id": "a2",
            "line": "13-14",
            "label": "boolean splitOdd10Helper(int start, int[] nums, int mult, int odd)\tif (start >= nums.length)"
        },
        {
            "id": 4,
            "line": 15,
            "label": "return mult % 10 == 0 && odd % 2 == 1;"
        },
        {
            "id": "a3",
            "line": "0-17",
            "label": "endif\tif (splitOdd10Helper(start+1, nums, mult + nums[start], odd))"
        },
        {
            "id": 7,
            "line": 18,
            "label": "return true;"
        },
        {
            "id": "a4",
            "line": "0-20",
            "label": "endif\tif (splitOdd10Helper(start+1, nums, mult, odd + nums[start]))"
        },
        {
            "id": 10,
            "line": 21,
            "label": "return true;"
        },
        {
            "id": "a5",
            "line": "0-23",
            "label": "endif\treturn false;"
        }
    ],
    "edges": [
        {
            "id": 2,
            "source": "a2",
            "target": 4,
            "label": "True"
        },
        {
            "id": 3,
            "source": "a2",
            "target": "a3",
            "label": "False"
        },
        {
            "id": 5,
            "source": "a3",
            "target": 7,
            "label": "True"
        },
        {
            "id": 6,
            "source": "a3",
            "target": "a4",
            "label": "False"
        },
        {
            "id": 8,
            "source": "a4",
            "target": 10,
            "label": "True"
        },
        {
            "id": 9,
            "source": "a4",
            "target": "a5",
            "label": "False"
        }
    ]
}