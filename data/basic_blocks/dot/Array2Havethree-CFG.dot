digraph result_test { 
// graph-vertices
  a2  [label="5-6-8:  boolean haveThree(int[] nums)	int count = 0	if (nums.length >= 1 && nums[0] == 3)"]; 
  3  [label="9:  count++"]; 
  a3  [label="0-11:  endif	int i = 1"]; 
  6  [label="11:  for (i < nums.length)"]; 
  a4  [label="0-19:  endfor	return count == 3;"]; 
  9  [label="12:  if (nums[i - 1] == 3 && nums[i] == 3)"]; 
  10  [label="13:  return false;"]; 
  a5  [label="0-15:  endif	if (nums[i] == 3)"]; 
  13  [label="16:  count++"]; 
  a6  [label="0-11:  endif	i++"]; 
// graph-edges
  a2 -> 3  [label="True"]; 
  3 -> a3;
  a2 -> a3  [label="False"]; 
  a3 -> 6;
  6 -> a4  [label="False"]; 
  6 -> 9  [label="True"]; 
  9 -> 10  [label="True"]; 
  9 -> a5  [label="False"]; 
  a5 -> 13  [label="True"]; 
  13 -> a6;
  a5 -> a6  [label="False"]; 
  a6 -> 6;
}