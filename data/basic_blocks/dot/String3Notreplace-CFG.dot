digraph result_test { 
// graph-vertices
  a1  [label="7-8:  String notReplace(String str)	if (str.equals('is'))"]; 
  2  [label="9:  return 'is not';"]; 
  a4  [label="0-11-12-14:  endif	StringBuilder result = new StringBuilder()	int i = 0	if (str.length() >= 3 && str.substring(0,2).equals('is') && !Character.isLetter(str.charAt(2)))"]; 
  a5  [label="16-17:  result.append('is not')	i = 2"]; 
  9  [label="0:  endif"]; 
  10  [label="20:  while (i < str.length())"]; 
  a6  [label="0-40:  endwhile	return result.toString();"]; 
  12  [label="21:  if (!Character.isLetter(str.charAt(i)))"]; 
  a7  [label="22-23:  result.append(str.charAt(i))	i++"]; 
  15  [label="0:  endif"]; 
  16  [label="24:  if (i >= 1 && i <= str.length()-3 &&  !Character.isLetter(str.charAt(i-1)) && str.substring(i,i+2).equals('is') && !Character.isLetter(str.charAt(i+2)))"]; 
  a8  [label="28-29:  result.append('is not')	i += 2"]; 
  19  [label="0:  endif"]; 
  20  [label="30:  if (i >= 1 && !Character.isLetter(str.charAt(i-1)) && str.substring(i).equals('is'))"]; 
  a9  [label="32-33:  result.append('is not')	i += 2"]; 
  23  [label="0:  endif"]; 
  a10  [label="35-36:  result.append(str.charAt(i))	i++"]; 
// graph-edges
  a1 -> 2  [label="True"]; 
  a1 -> a4  [label="False"]; 
  a4 -> a5  [label="True"]; 
  a5 -> 9;
  a4 -> 9  [label="False"]; 
  9 -> 10;
  10 -> a6  [label="False"]; 
  10 -> 12  [label="True"]; 
  12 -> a7  [label="True"]; 
  a7 -> 15;
  12 -> 16  [label="False"]; 
  16 -> a8  [label="True"]; 
  a8 -> 19;
  16 -> 20  [label="False"]; 
  20 -> a9  [label="True"]; 
  a9 -> 23;
  20 -> a10  [label="False"]; 
  a10 -> 23;
  23 -> 19;
  19 -> 15;
  15 -> 10;
}