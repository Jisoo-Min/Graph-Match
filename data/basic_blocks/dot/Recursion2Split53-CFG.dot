digraph result_test { 
// graph-vertices
  a1  [label="8-9:  boolean split53(int[] nums)	return split53Helper(0, nums, 0, 0);"]; 
  a2  [label="12-13:  boolean split53Helper(int start, int[] nums, int mult5, int mult3)	if (start >= nums.length)"]; 
  4  [label="14:  return mult5 == mult3;"]; 
  a3  [label="0-16:  endif	if (nums[start] % 5 == 0)"]; 
  7  [label="17:  return split53Helper(start+1, nums, mult5 + nums[start], mult3);"]; 
  a4  [label="0-19:  endif	if (nums[start] % 3 == 0)"]; 
  10  [label="20:  return split53Helper(start+1, nums, mult5, mult3 + nums[start]);"]; 
  a5  [label="0-22:  endif	if (split53Helper(start+1, nums, mult5 + nums[start], mult3))"]; 
  13  [label="23:  return true;"]; 
  a6  [label="0-25:  endif	if (split53Helper(start+1, nums, mult5, mult3 + nums[start]))"]; 
  16  [label="26:  return true;"]; 
  a7  [label="0-28:  endif	return false;"]; 
// graph-edges
  a2 -> 4  [label="True"]; 
  a2 -> a3  [label="False"]; 
  a3 -> 7  [label="True"]; 
  a3 -> a4  [label="False"]; 
  a4 -> 10  [label="True"]; 
  a4 -> a5  [label="False"]; 
  a5 -> 13  [label="True"]; 
  a5 -> a6  [label="False"]; 
  a6 -> 16  [label="True"]; 
  a6 -> a7  [label="False"]; 
}