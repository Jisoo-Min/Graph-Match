digraph result_test { 
// graph-vertices
  a2  [label="7-8-9:  boolean linearIn(int[] outer, int[] inner)	int i = 0	int j = 0"]; 
  3  [label="11:  while (i < inner.length && j < outer.length)"]; 
  a3  [label="0-21:  endwhile	if (i != inner.length)"]; 
  5  [label="12:  if (inner[i] > outer[j])"]; 
  6  [label="13:  j++"]; 
  7  [label="0:  endif"]; 
  8  [label="14:  if (inner[i] < outer[j])"]; 
  9  [label="15:  return false;"]; 
  13  [label="22:  return false;"]; 
  a4  [label="17-0:  i++	endif"]; 
  a5  [label="0-24:  endif	return true;"]; 
// graph-edges
  a2 -> 3;
  3 -> a3  [label="False"]; 
  3 -> 5  [label="True"]; 
  5 -> 6  [label="True"]; 
  6 -> 7;
  5 -> 8  [label="False"]; 
  8 -> 9  [label="True"]; 
  8 -> a4  [label="False"]; 
  a4 -> 7;
  7 -> 3;
  a3 -> 13  [label="True"]; 
  a3 -> a5  [label="False"]; 
}