{
  "directed": true,
  "multigraph": true,
  "label": "CFG of Array2Evenodd.java",
  "type": "Control Flow Graph (CFG)",
  "file": "Array2Evenodd.java",
  "package": "",

  "nodes": [
    {
      "id": 0,
      "line": 7,
      "label": "int[] evenOdd(int[] nums)"
    },
    {
      "id": 1,
      "line": 8,
      "label": "int i = 0"
    },
    {
      "id": 2,
      "line": 10,
      "label": "while (i < nums.length && nums[i] % 2 == 0)"
    },
    {
      "id": 3,
      "line": 0,
      "label": "endwhile"
    },
    {
      "id": 4,
      "line": 11,
      "label": "i++"
    },
    {
      "id": 5,
      "line": 13,
      "label": "int j = i + 1"
    },
    {
      "id": 6,
      "line": 13,
      "label": "for (j < nums.length)"
    },
    {
      "id": 7,
      "line": 13,
      "label": "j++"
    },
    {
      "id": 8,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 9,
      "line": 14,
      "label": "if (nums[j] % 2 == 0)"
    },
    {
      "id": 10,
      "line": 15,
      "label": "int temp = nums[i]"
    },
    {
      "id": 11,
      "line": 16,
      "label": "nums[i] = nums[j]"
    },
    {
      "id": 12,
      "line": 17,
      "label": "nums[j] = temp"
    },
    {
      "id": 13,
      "line": 18,
      "label": "i++"
    },
    {
      "id": 14,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 15,
      "line": 22,
      "label": "return nums;"
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "label": ""
    },
    {
      "id": 2,
      "source": 2,
      "target": 3,
      "label": "False"
    },
    {
      "id": 3,
      "source": 2,
      "target": 4,
      "label": "True"
    },
    {
      "id": 4,
      "source": 4,
      "target": 2,
      "label": ""
    },
    {
      "id": 5,
      "source": 3,
      "target": 5,
      "label": ""
    },
    {
      "id": 6,
      "source": 5,
      "target": 6,
      "label": ""
    },
    {
      "id": 7,
      "source": 6,
      "target": 8,
      "label": "False"
    },
    {
      "id": 8,
      "source": 6,
      "target": 9,
      "label": "True"
    },
    {
      "id": 9,
      "source": 9,
      "target": 10,
      "label": "True"
    },
    {
      "id": 10,
      "source": 10,
      "target": 11,
      "label": ""
    },
    {
      "id": 11,
      "source": 11,
      "target": 12,
      "label": ""
    },
    {
      "id": 12,
      "source": 12,
      "target": 13,
      "label": ""
    },
    {
      "id": 13,
      "source": 13,
      "target": 14,
      "label": ""
    },
    {
      "id": 14,
      "source": 9,
      "target": 14,
      "label": "False"
    },
    {
      "id": 15,
      "source": 14,
      "target": 7,
      "label": ""
    },
    {
      "id": 16,
      "source": 7,
      "target": 6,
      "label": ""
    },
    {
      "id": 17,
      "source": 8,
      "target": 15,
      "label": ""
    }
  ]
}
