{
  "directed": true,
  "multigraph": true,
  "label": "CFG of Array2Notalone.java",
  "type": "Control Flow Graph (CFG)",
  "file": "Array2Notalone.java",
  "package": "",

  "nodes": [
    {
      "id": 0,
      "line": 7,
      "label": "int[] notAlone(int[] nums, int val)"
    },
    {
      "id": 1,
      "line": 8,
      "label": "int[] arr = new int[nums.length]"
    },
    {
      "id": 2,
      "line": 10,
      "label": "if (nums.length >= 1)"
    },
    {
      "id": 3,
      "line": 11,
      "label": "arr[0] = nums[0]"
    },
    {
      "id": 4,
      "line": 12,
      "label": "arr[arr.length-1] = nums[nums.length-1]"
    },
    {
      "id": 5,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 6,
      "line": 15,
      "label": "int i = 1"
    },
    {
      "id": 7,
      "line": 15,
      "label": "for (i <= nums.length - 2)"
    },
    {
      "id": 8,
      "line": 15,
      "label": "i++"
    },
    {
      "id": 9,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 10,
      "line": 16,
      "label": "if (nums[i] == val && nums[i] != nums[i-1] && nums[i] != nums[i+1])"
    },
    {
      "id": 11,
      "line": 17,
      "label": "arr[i] = Math.max(nums[i-1], nums[i+1])"
    },
    {
      "id": 12,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 13,
      "line": 19,
      "label": "arr[i] = nums[i]"
    },
    {
      "id": 14,
      "line": 22,
      "label": "return arr;"
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "label": ""
    },
    {
      "id": 2,
      "source": 2,
      "target": 3,
      "label": "True"
    },
    {
      "id": 3,
      "source": 3,
      "target": 4,
      "label": ""
    },
    {
      "id": 4,
      "source": 4,
      "target": 5,
      "label": ""
    },
    {
      "id": 5,
      "source": 2,
      "target": 5,
      "label": "False"
    },
    {
      "id": 6,
      "source": 5,
      "target": 6,
      "label": ""
    },
    {
      "id": 7,
      "source": 6,
      "target": 7,
      "label": ""
    },
    {
      "id": 8,
      "source": 7,
      "target": 9,
      "label": "False"
    },
    {
      "id": 9,
      "source": 7,
      "target": 10,
      "label": "True"
    },
    {
      "id": 10,
      "source": 10,
      "target": 11,
      "label": "True"
    },
    {
      "id": 11,
      "source": 11,
      "target": 12,
      "label": ""
    },
    {
      "id": 12,
      "source": 10,
      "target": 13,
      "label": "False"
    },
    {
      "id": 13,
      "source": 13,
      "target": 12,
      "label": ""
    },
    {
      "id": 14,
      "source": 12,
      "target": 8,
      "label": ""
    },
    {
      "id": 15,
      "source": 8,
      "target": 7,
      "label": ""
    },
    {
      "id": 16,
      "source": 9,
      "target": 14,
      "label": ""
    }
  ]
}
