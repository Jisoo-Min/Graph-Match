{
  "directed": true,
  "multigraph": true,
  "label": "CFG of Recursion2Groupsum5.java",
  "type": "Control Flow Graph (CFG)",
  "file": "Recursion2Groupsum5.java",
  "package": "",

  "nodes": [
    {
      "id": 0,
      "line": 8,
      "label": "boolean groupSum5(int start, int[] nums, int target)"
    },
    {
      "id": 1,
      "line": 9,
      "label": "if (start >= nums.length)"
    },
    {
      "id": 2,
      "line": 10,
      "label": "return target == 0;"
    },
    {
      "id": 3,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 4,
      "line": 12,
      "label": "if (nums[start] % 5 == 0)"
    },
    {
      "id": 5,
      "line": 13,
      "label": "if (start <= nums.length - 2 && nums[start+1] == 1)"
    },
    {
      "id": 6,
      "line": 14,
      "label": "return groupSum5(start+2, nums, target - nums[start]);"
    },
    {
      "id": 7,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 8,
      "line": 16,
      "label": "return groupSum5(start+1, nums, target - nums[start]);"
    },
    {
      "id": 9,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 10,
      "line": 19,
      "label": "if (groupSum5(start+1, nums, target - nums[start]))"
    },
    {
      "id": 11,
      "line": 20,
      "label": "return true;"
    },
    {
      "id": 12,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 13,
      "line": 22,
      "label": "if (groupSum5(start+1, nums, target))"
    },
    {
      "id": 14,
      "line": 23,
      "label": "return true;"
    },
    {
      "id": 15,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 16,
      "line": 25,
      "label": "return false;"
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "label": "True"
    },
    {
      "id": 2,
      "source": 1,
      "target": 3,
      "label": "False"
    },
    {
      "id": 3,
      "source": 3,
      "target": 4,
      "label": ""
    },
    {
      "id": 4,
      "source": 4,
      "target": 5,
      "label": "True"
    },
    {
      "id": 5,
      "source": 5,
      "target": 6,
      "label": "True"
    },
    {
      "id": 6,
      "source": 5,
      "target": 7,
      "label": "False"
    },
    {
      "id": 7,
      "source": 7,
      "target": 8,
      "label": ""
    },
    {
      "id": 8,
      "source": 4,
      "target": 9,
      "label": "False"
    },
    {
      "id": 9,
      "source": 9,
      "target": 10,
      "label": ""
    },
    {
      "id": 10,
      "source": 10,
      "target": 11,
      "label": "True"
    },
    {
      "id": 11,
      "source": 10,
      "target": 12,
      "label": "False"
    },
    {
      "id": 12,
      "source": 12,
      "target": 13,
      "label": ""
    },
    {
      "id": 13,
      "source": 13,
      "target": 14,
      "label": "True"
    },
    {
      "id": 14,
      "source": 13,
      "target": 15,
      "label": "False"
    },
    {
      "id": 15,
      "source": 15,
      "target": 16,
      "label": ""
    }
  ]
}
