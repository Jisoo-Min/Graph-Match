{
  "directed": true,
  "multigraph": true,
  "label": "CFG of Array2Fizzbuzz.java",
  "type": "Control Flow Graph (CFG)",
  "file": "Array2Fizzbuzz.java",
  "package": "",

  "nodes": [
    {
      "id": 0,
      "line": 15,
      "label": "String[] fizzBuzz(int start, int end)"
    },
    {
      "id": 1,
      "line": 16,
      "label": "String[] arr = new String[end - start]"
    },
    {
      "id": 2,
      "line": 18,
      "label": "int i = start"
    },
    {
      "id": 3,
      "line": 18,
      "label": "for (i < end)"
    },
    {
      "id": 4,
      "line": 18,
      "label": "i++"
    },
    {
      "id": 5,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 6,
      "line": 19,
      "label": "if (i % 15 == 0)"
    },
    {
      "id": 7,
      "line": 20,
      "label": "arr[i - start] = 'FizzBuzz'"
    },
    {
      "id": 8,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 9,
      "line": 21,
      "label": "if (i % 3 == 0)"
    },
    {
      "id": 10,
      "line": 22,
      "label": "arr[i - start] = 'Fizz'"
    },
    {
      "id": 11,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 12,
      "line": 23,
      "label": "if (i % 5 == 0)"
    },
    {
      "id": 13,
      "line": 24,
      "label": "arr[i - start] = 'Buzz'"
    },
    {
      "id": 14,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 15,
      "line": 26,
      "label": "arr[i - start] = String.valueOf(i)"
    },
    {
      "id": 16,
      "line": 30,
      "label": "return arr;"
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "label": ""
    },
    {
      "id": 2,
      "source": 2,
      "target": 3,
      "label": ""
    },
    {
      "id": 3,
      "source": 3,
      "target": 5,
      "label": "False"
    },
    {
      "id": 4,
      "source": 3,
      "target": 6,
      "label": "True"
    },
    {
      "id": 5,
      "source": 6,
      "target": 7,
      "label": "True"
    },
    {
      "id": 6,
      "source": 7,
      "target": 8,
      "label": ""
    },
    {
      "id": 7,
      "source": 6,
      "target": 9,
      "label": "False"
    },
    {
      "id": 8,
      "source": 9,
      "target": 10,
      "label": "True"
    },
    {
      "id": 9,
      "source": 10,
      "target": 11,
      "label": ""
    },
    {
      "id": 10,
      "source": 9,
      "target": 12,
      "label": "False"
    },
    {
      "id": 11,
      "source": 12,
      "target": 13,
      "label": "True"
    },
    {
      "id": 12,
      "source": 13,
      "target": 14,
      "label": ""
    },
    {
      "id": 13,
      "source": 12,
      "target": 15,
      "label": "False"
    },
    {
      "id": 14,
      "source": 15,
      "target": 14,
      "label": ""
    },
    {
      "id": 15,
      "source": 14,
      "target": 11,
      "label": ""
    },
    {
      "id": 16,
      "source": 11,
      "target": 8,
      "label": ""
    },
    {
      "id": 17,
      "source": 8,
      "target": 4,
      "label": ""
    },
    {
      "id": 18,
      "source": 4,
      "target": 3,
      "label": ""
    },
    {
      "id": 19,
      "source": 5,
      "target": 16,
      "label": ""
    }
  ]
}
