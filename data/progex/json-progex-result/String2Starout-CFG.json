{
  "directed": true,
  "multigraph": true,
  "label": "CFG of String2Starout.java",
  "type": "Control Flow Graph (CFG)",
  "file": "String2Starout.java",
  "package": "",

  "nodes": [
    {
      "id": 0,
      "line": 6,
      "label": "String starOut(String str)"
    },
    {
      "id": 1,
      "line": 7,
      "label": "if (str.length() < 1)"
    },
    {
      "id": 2,
      "line": 8,
      "label": "return '';"
    },
    {
      "id": 3,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 4,
      "line": 10,
      "label": "if (str.length() == 1)"
    },
    {
      "id": 5,
      "line": 11,
      "label": "if (str.charAt(0) == '*')"
    },
    {
      "id": 6,
      "line": 12,
      "label": "return '';"
    },
    {
      "id": 7,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 8,
      "line": 14,
      "label": "return str;"
    },
    {
      "id": 9,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 10,
      "line": 17,
      "label": "char[] arr = new char[str.length()]"
    },
    {
      "id": 11,
      "line": 18,
      "label": "int count = 0"
    },
    {
      "id": 12,
      "line": 21,
      "label": "if (str.charAt(0) != '*' && str.charAt(1) != '*')"
    },
    {
      "id": 13,
      "line": 22,
      "label": "arr[count] = str.charAt(0)"
    },
    {
      "id": 14,
      "line": 23,
      "label": "count++"
    },
    {
      "id": 15,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 16,
      "line": 26,
      "label": "int i = 1"
    },
    {
      "id": 17,
      "line": 26,
      "label": "for (i < str.length() - 1)"
    },
    {
      "id": 18,
      "line": 26,
      "label": "i++"
    },
    {
      "id": 19,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 20,
      "line": 27,
      "label": "if (str.charAt(i-1)!='*' && str.charAt(i) != '*' && str.charAt(i+1) != '*')"
    },
    {
      "id": 21,
      "line": 29,
      "label": "arr[count] = str.charAt(i)"
    },
    {
      "id": 22,
      "line": 30,
      "label": "count++"
    },
    {
      "id": 23,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 24,
      "line": 34,
      "label": "if (str.charAt(str.length()-1) != '*' && str.charAt(str.length()-2) != '*')"
    },
    {
      "id": 25,
      "line": 36,
      "label": "arr[count] = str.charAt(str.length() - 1)"
    },
    {
      "id": 26,
      "line": 37,
      "label": "count++"
    },
    {
      "id": 27,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 28,
      "line": 40,
      "label": "return new String(arr, 0, count);"
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "label": "True"
    },
    {
      "id": 2,
      "source": 1,
      "target": 3,
      "label": "False"
    },
    {
      "id": 3,
      "source": 3,
      "target": 4,
      "label": ""
    },
    {
      "id": 4,
      "source": 4,
      "target": 5,
      "label": "True"
    },
    {
      "id": 5,
      "source": 5,
      "target": 6,
      "label": "True"
    },
    {
      "id": 6,
      "source": 5,
      "target": 8,
      "label": "False"
    },
    {
      "id": 7,
      "source": 7,
      "target": 9,
      "label": ""
    },
    {
      "id": 8,
      "source": 4,
      "target": 9,
      "label": "False"
    },
    {
      "id": 9,
      "source": 9,
      "target": 10,
      "label": ""
    },
    {
      "id": 10,
      "source": 10,
      "target": 11,
      "label": ""
    },
    {
      "id": 11,
      "source": 11,
      "target": 12,
      "label": ""
    },
    {
      "id": 12,
      "source": 12,
      "target": 13,
      "label": "True"
    },
    {
      "id": 13,
      "source": 13,
      "target": 14,
      "label": ""
    },
    {
      "id": 14,
      "source": 14,
      "target": 15,
      "label": ""
    },
    {
      "id": 15,
      "source": 12,
      "target": 15,
      "label": "False"
    },
    {
      "id": 16,
      "source": 15,
      "target": 16,
      "label": ""
    },
    {
      "id": 17,
      "source": 16,
      "target": 17,
      "label": ""
    },
    {
      "id": 18,
      "source": 17,
      "target": 19,
      "label": "False"
    },
    {
      "id": 19,
      "source": 17,
      "target": 20,
      "label": "True"
    },
    {
      "id": 20,
      "source": 20,
      "target": 21,
      "label": "True"
    },
    {
      "id": 21,
      "source": 21,
      "target": 22,
      "label": ""
    },
    {
      "id": 22,
      "source": 22,
      "target": 23,
      "label": ""
    },
    {
      "id": 23,
      "source": 20,
      "target": 23,
      "label": "False"
    },
    {
      "id": 24,
      "source": 23,
      "target": 18,
      "label": ""
    },
    {
      "id": 25,
      "source": 18,
      "target": 17,
      "label": ""
    },
    {
      "id": 26,
      "source": 19,
      "target": 24,
      "label": ""
    },
    {
      "id": 27,
      "source": 24,
      "target": 25,
      "label": "True"
    },
    {
      "id": 28,
      "source": 25,
      "target": 26,
      "label": ""
    },
    {
      "id": 29,
      "source": 26,
      "target": 27,
      "label": ""
    },
    {
      "id": 30,
      "source": 24,
      "target": 27,
      "label": "False"
    },
    {
      "id": 31,
      "source": 27,
      "target": 28,
      "label": ""
    }
  ]
}
