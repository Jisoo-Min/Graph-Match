{
  "directed": true,
  "multigraph": true,
  "label": "CFG of String3Countyz.java",
  "type": "Control Flow Graph (CFG)",
  "file": "String3Countyz.java",
  "package": "",

  "nodes": [
    {
      "id": 0,
      "line": 7,
      "label": "int countYZ(String str)"
    },
    {
      "id": 1,
      "line": 8,
      "label": "if (str.length() == 0)"
    },
    {
      "id": 2,
      "line": 9,
      "label": "return 0;"
    },
    {
      "id": 3,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 4,
      "line": 11,
      "label": "int count = 0"
    },
    {
      "id": 5,
      "line": 13,
      "label": "int i = 0"
    },
    {
      "id": 6,
      "line": 13,
      "label": "for (i <= str.length() - 2)"
    },
    {
      "id": 7,
      "line": 13,
      "label": "i++"
    },
    {
      "id": 8,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 9,
      "line": 14,
      "label": "if ((Character.toLowerCase(str.charAt(i)) == 'y' ||   Character.toLowerCase(str.charAt(i)) == 'z') && !Character.isLetter(str.charAt(i+1)))"
    },
    {
      "id": 10,
      "line": 17,
      "label": "count++"
    },
    {
      "id": 11,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 12,
      "line": 20,
      "label": "if (Character.toLowerCase(str.charAt(str.length() - 1)) == 'y' || Character.toLowerCase(str.charAt(str.length() - 1)) == 'z')"
    },
    {
      "id": 13,
      "line": 22,
      "label": "count++"
    },
    {
      "id": 14,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 15,
      "line": 24,
      "label": "return count;"
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "label": "True"
    },
    {
      "id": 2,
      "source": 1,
      "target": 3,
      "label": "False"
    },
    {
      "id": 3,
      "source": 3,
      "target": 4,
      "label": ""
    },
    {
      "id": 4,
      "source": 4,
      "target": 5,
      "label": ""
    },
    {
      "id": 5,
      "source": 5,
      "target": 6,
      "label": ""
    },
    {
      "id": 6,
      "source": 6,
      "target": 8,
      "label": "False"
    },
    {
      "id": 7,
      "source": 6,
      "target": 9,
      "label": "True"
    },
    {
      "id": 8,
      "source": 9,
      "target": 10,
      "label": "True"
    },
    {
      "id": 9,
      "source": 10,
      "target": 11,
      "label": ""
    },
    {
      "id": 10,
      "source": 9,
      "target": 11,
      "label": "False"
    },
    {
      "id": 11,
      "source": 11,
      "target": 7,
      "label": ""
    },
    {
      "id": 12,
      "source": 7,
      "target": 6,
      "label": ""
    },
    {
      "id": 13,
      "source": 8,
      "target": 12,
      "label": ""
    },
    {
      "id": 14,
      "source": 12,
      "target": 13,
      "label": "True"
    },
    {
      "id": 15,
      "source": 13,
      "target": 14,
      "label": ""
    },
    {
      "id": 16,
      "source": 12,
      "target": 14,
      "label": "False"
    },
    {
      "id": 17,
      "source": 14,
      "target": 15,
      "label": ""
    }
  ]
}
